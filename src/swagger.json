{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "VUTTR API - Desafio Bossabox",
        "description": "Desafio backend Bossabox"
    },
    "servers": [
        {
            "url": "/",
            "description": "Local Dev"
        },
        {
            "url": "/api/",
            "description": "Remote Heroku"
        }
    ],
    "tags": [
        {
            "name": "Tools",
            "description": "API for tools"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/tools": {
            "get": {
                "tags": [
                    "Tools"
                ],
                "summary": "Get Tools",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tools"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tools"
                ],
                "summary": "Create a new tool in system",
                "requestBody": {
                    "description": "tool Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Tools"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/tools/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the tool that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Tools"
                ],
                "summary": "Get tool with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Tool with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tools"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "put": {
                "summary": "Update tool with given ID",
                "tags": [
                    "Tools"
                ],
                "requestBody": {
                    "description": "Tool Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Tools"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Tool with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tools"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete tool with given ID",
                "tags": [
                    "Tools"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Tool with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Tool not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "id": {
                    "type": "ObjectId"
                }
            }
        },
        "Tools": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }        
    }
}